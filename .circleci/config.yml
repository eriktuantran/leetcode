# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/configuration-reference/#jobs
jobs:
  say-hello:
    # Specify the execution environment. You can specify an image from Docker Hub or use one of our convenience images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/configuration-reference/#executor-job
    docker:
      - image: cimg/base:stable
    # Add steps to the job
    # See: https://circleci.com/docs/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: "Say hello"
          command: "echo Hello, World!"
  build:
    docker:
      - image: cimg/base:stable
    working_directory: ~/circleci-googletest
    environment:
      TEST_RESULTS: /tmp/test-results
    steps:
        - run:
            name: Install dependencies
            command: |
              sudo apt -y -q update
              sudo apt -y -q install cmake
              sudo apt -y -q install lcov
        - checkout
        - run:
            name: Init git submodule
            command: |
              git submodule update --init --recursive
        - run:
            name: CMake build files
            command: |
              mkdir build
              cd build
              cmake ..
        - run: |
            cd build
            make
        - run:
            name: Run unit tests
            command: |
              # The "environment:" option doesn't expand vars.
              export GTEST_OUTPUT=xml:${TEST_RESULTS}/
              mkdir -p $TEST_RESULTS
              cd build
              GTEST_COLOR=1 ctest -V
        - run:
            name: Run coverage
            command: |
              # The "environment:" option doesn't expand vars.
              mkdir -p $TEST_RESULTS
              COV_FILE=$TEST_RESULTS/coverage.info
              lcov --directory . --capture --output-file $COV_FILE
              lcov --remove $COV_FILE 'tests/*' 'modules/*' '/usr/*' 'test-library*' --output-file $COV_FILE
              lcov --list $COV_FILE
        - store_test_results:
            # This option doesn't expand $TEST_RESULTS if used.
            path: /tmp/test-results
        - store_artifacts:
            path: /tmp/test-results

# Orchestrate jobs using workflows
# See: https://circleci.com/docs/configuration-reference/#workflows
workflows:
  say-hello-workflow:
    jobs:
      - say-hello
      - build
